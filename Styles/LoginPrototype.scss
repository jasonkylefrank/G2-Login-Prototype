@import "Tools/tools-dir";

body {
    font-family: 'Gotham SSm A', 'Gotham SSm B', sans-serif;
    overflow-x: hidden;

    // TEMP
    //background: red;
}

/*#region --- Show/Hide different img elements based on Color Scheme ---*/
body.Blue img:not(.MenuButton) { /* for some reason I couldn't add ":not(#uiOptions img)" here as well, so I added it below */
    display: none;
}

body.Dark img, body.Light img, body.Blue #uiOptions img {
    display: inline-block;
}

body.Dark  img.BlueBGScheme,
body.Light img.BlueBGScheme {
    display: none;
}
body.Blue img.BlueBGScheme {
    display: inline-block;
}
/*#endregion --- end Show/Hide different img elements based on Color Scheme ---*/


/* Video BG Helpful info: http://demosthenes.info/blog/777/Create-Fullscreen-HTML5-Page-Background-Video  */
video#bgvid
{
    position: fixed;
    right: 0;
    bottom: 0;
    min-width: 100%;
    min-height: 100%;
    @include size(auto);
    background-size: cover;
    z-index: -100;
    opacity: 0.0;
    /*position: absolute;
    left: 0;
    top: 0;
    width: 101%;
    height: 100%;*/

    transform: scale(1);
    /* This is not working...
    transform-origin: 50% 50%;
    */
    transition: opacity 3.0s;
}

body.Loaded video#bgvid {
    opacity: 1.0;
}

/* Dealing With Mobile */
/*@media screen and (max-device-width: 800px) {
    html { background: url(../images/ConferenceTable.jpg) #000 no-repeat center center fixed; }
    #bgvid { display: none; }
}*/

.Button
{
    cursor: pointer;
    display: inline-block;
}

.Button:hover
{
    opacity: 1.0;
}

#mainWrapper {
    display: inline-block;
    padding-right: 18px;
    float: left;
    width: 450px; /* explicit width to keep aux info paragraphs from widening this container */

    position: relative;
    top: -25px; // Pre-transition starting-point
    opacity: 0.0;

    transition: all 1.0s;
}

body.Loaded #mainWrapper {
    top: 0px;
    opacity: 1.0;
}

body.Dark #mainWrapper {
    background: rgba(0,0,0, .2);
}

body.Light #mainWrapper {
    background: rgba(255,255,255, .2);
}

body.Blue #mainWrapper {
    background: rgba(0,191,255, .4);
    /*background: #00bfff;*/
}

#formAndInfoWrapper {
    margin-left: 15px;
}

/*#region --- Options Menu --- */
.MenuButton
{
    position: absolute;
    top: 0;
    right: 0;
    margin-top: 20px;
    margin-right: 20px;
    @include size(30px);
    fill: #09c;

    transition: all .3s;
}

.MenuButton.MenuShown {
    right: 195px;
    transform: rotate(-90deg);
}

.icon-menu {
  @include size(100%);
}

#uiOptions
{
    opacity: .6;
    position: absolute;
    width: 195px;
    right: -195px;

    box-sizing: border-box;

    top: 0;
    min-height: 100%;
    padding-left: 15px;
    background-color: rgba(0,0,0,.6);
    font-size: .9rem;
    color: #dfdfdf;

    transition: all .3s;
}

#uiOptions:hover {
    opacity: 1.0;
}


#uiOptions.Shown
{
    right: 0px;
}

#uiOptions h4 {
    /*text-align: center;*/
    font-size: 1.1rem;
    text-transform: uppercase;
}

#uiOptionsHeaderBlock {
    margin-top: 18px;
}

#uiOptionsHeaderBlock h4 {
    float: left;
    margin-top: 0;
}

#closeUIOptionsButton {
    float: right;
    margin-right: 20px;
}

#closeUIOptionsButton img {
    height: 16px;
}

#uiOptions ul {
    padding-left: 0; /* needed to override browser-defined padding */
    /*text-align: center;*/  /* Horizontally center the ul */
    clear: both;
}

#uiOptions li {
    list-style-type: none;
    margin-bottom: 25px;
}

.uiOptionLabel {
    display: block;
    margin-bottom: 3px;
}

.RadioButtonToggleSet span
{
    display: inline-block;
    padding: 3px 11px;
    border: 1px solid #0099cc;
    opacity: .6;
}

.RadioButtonToggleSet span:not(.Selected):hover {
    opacity: 1.0;
    background-color: rgba(57,205,255, .6);
}

.RadioButtonToggleSet .Selected {
    background-color: rgba(57,205,255, .3);
    opacity: 1.0;
}
/*#endregion --- Options Menu --- */

/*#region --- Logos and Icons --- */
.Logo
{
    transition: all .3s;

    height: 140px;
    margin-top: 15px;
    margin-left: 3px;
}

.OldLogo {
    margin-left: 14px;
}

#newLogo {

}

.NewLogo.LogoSizeBig {
    margin-left: -6px;
    height: 303px;
}

.OldLogo.LogoSizeBig {
    height: 368px;
}

.icon-check {
    fill: white;
    @include size(32px);
    vertical-align: bottom;
}
/*#endregion --- end Logos --- */

/*#region --- "Dimmed" elements --- */
.dimmed
{
    transition: all .4s;

    position: absolute;
    left: 0;
    top: 0;
    @include size(100%);

    /* Normally I think the opacity would probably be applied with JavaScript, so we could show a bright
       background before the video or images take over the BG. */
    opacity: 0.65;
}

body.Dark .dimmed, body.Blue .dimmed {
    background: #000;
}

body.Light .dimmed {
    background: #fff;
}
/*
body.Blue .dimmed {
    background: #0099cc;
}
*/

#DimmedBG {
    z-index: -50;
    position: fixed;
}
/*#endregion --- end "Dimmed" elements --- */

form {
    margin-top: 20px;
}

form:after {
    /* Clearfix trick to keep floated elements from spilling out of this container.
       See: http://stackoverflow.com/a/11597829/718325 */
    content: " ";
    display: block;
    height: 0;
    clear: both;
}

input
{
    /*background-color: rgba(255,255,255,.3);*/
    box-sizing: border-box;

    width: 100%;
    border-width: 1px;
    border-color: rgba(255,255,255,.1);
    background-color: rgba(0,155,204, .3);
    /*background-color: #39cdff;*/
    background-color: rgba(57,205,255, .3);
    font-size: 2em;
    display: block;
    background-size: 1.0em;
    background-repeat: no-repeat;
    background-position: left;
    padding-left: 42px;
    padding-top: 5px;
    padding-bottom: 5px;
    margin-bottom: 20px;

    transition: all .3s;
}

body.Dark input {
    color: white;
}

body.Light input {
    color:black;
}

body.Blue input {
    color: white;
    background-color: rgba(255,255,255, .3);
}

#UsernameInput {
    background-image: url(../images/user1-blue.svg);
}
body.Blue #UsernameInput {
    background-image: url(../images/user1-light.svg);
}

#PasswordInput {
    background-image: url(../images/lock-10-blue.svg);
}

body.Blue #PasswordInput {
    background-image: url(../images/lock-10-light.svg);
}


.login-button
{
    display: inline-block;
    padding: 5px 10px;
    margin-top: 0px;
    margin-bottom: 5px;
    margin-right: 3px;
    border: 2px solid #444;

    opacity: 1.0;
    background-color: #0099cc;
    border-color: #0099cc;

    color: white;
    font-size: 2em;
    cursor: default;
    position: relative;
    float: left;

    transition: opacity .75s, margin .75s, background-color .25s;
}

.login-button.disabled {
  border-color: #444;  /* Disabled color */
  background-color: #666; /* Disabled appearance */
  opacity: .5;
}

.login-button.active-message {
  opacity: .2;
}

  .login-button:not(.disabled):not(.active-message):hover {
      background-color: transparent;
      cursor: pointer;
  }

  .login-button:active
  {
      background-color: rgba(35, 193, 246, 0.5);
      transition: all 0s;
  }

body.Blue .login-button {
    background-color: white;
    border-color: white;
    color: #0099cc;
}


.Message {
    color: white;
    //padding: 10px;
    padding: 8px 12px 8px 7px;
    //margin: 0 2px 20px;
    font-size: 1.5em;
}

.SuccessMessage {
    background: rgba(60,205,60, .5);
    border: 2px solid rgba(26, 134, 26, 1);

    float: left;
    position: relative;
    left: -10px;
    opacity: 0;
    transition: all 0.3s ease 0s;
}

  .SuccessMessage.is-active {
    opacity: 1;
    left: 20px;
  }
/* Styles for elements besides the active message itself (these elements respecte the active-message state) */
.active-message {
  opacity: .2;
  transition: .2s all;
}
.dimmed.active-message {
  opacity: .95;
}

/*#region --- Textbox Watermark/Placeholderm text --- */

// Placeholder text when the input does not have focus
@mixin placeholder-styles {
  opacity: .6;
  transition: .25s all;
}
@mixin placeholder-styles--dark {
  color: #aaa;
}
@mixin placeholder-styles--light {
  color: #555;
  opacity: .6; // override the special-case base opacity specified for firefox when in light theme
}
@mixin placeholder-styles--has-focus {
  opacity: .3;
}

// (must specify each rule separately instead of comma-separated selectdors)
::-webkit-input-placeholder {
   @include placeholder-styles;
}
:-moz-placeholder { /* Firefox 18- */
   @include placeholder-styles;
}
::-moz-placeholder {  /* Firefox 19+ */
   //@include placeholder-styles;
   opacity: .3; // for some reason Firefox needs a much lower opacity to look right.
}
:-ms-input-placeholder {
   @include placeholder-styles;
}

/* Placeholder text color when using the DARK theme */
// (must specify each rule separately instead of comma-separated selectdors)
.Dark::-webkit-input-placeholder {
   @include placeholder-styles--dark;
}
.Dark:-moz-placeholder { /* Firefox 18- */
   @include placeholder-styles--dark;
}
.Dark::-moz-placeholder {  /* Firefox 19+ */
   @include placeholder-styles--dark;
}
.Dark:-ms-input-placeholder {
   @include placeholder-styles--dark;
}

/* Placeholder text color when using the LIGHT theme */
// (must specify each rule separately instead of comma-separated selectdors)
.Light ::-webkit-input-placeholder {
  @include placeholder-styles--light;
}
.Light :-moz-placeholder { /* Firefox 18- */
   @include placeholder-styles--light;
}
.Light ::-moz-placeholder {  /* Firefox 19+ */
   @include placeholder-styles--light;
}
.Light :-ms-input-placeholder {
   @include placeholder-styles--light;
}

/* Placeholder text when the input has FOCUS */
:focus::-webkit-input-placeholder {
   @include placeholder-styles--has-focus;
}
:focus:-moz-placeholder { /* Firefox 18- */
   @include placeholder-styles--has-focus;
}
:focus::-moz-placeholder {  /* Firefox 19+ */
  @include placeholder-styles--has-focus;
  opacity: .17;  // override
}
:focus:-ms-input-placeholder {
   @include placeholder-styles--has-focus;
}
/*#endregion --- end Textbox Placeholder styles --- */

.optionSeparator {
    width: 85%;
    border-color: rgba(255,255,255,.3);
    margin-left: 0;
    margin-top: 45px;
    opacity: 0;
}

/*#region --- Auxillary Info elements --- */
ul#auxInfoButtons {
    padding: 0;
    /*margin-top: 0;*/
    margin-bottom: 0;
    float: right;
    color:white;
}

    ul#auxInfoButtons li
    {
        list-style-type: none;
        display: inline-block;
        padding: 3px;
        cursor: pointer;
        opacity: .6;

        transition: all .25s;
    }

        ul#auxInfoButtons li:hover, ul#auxInfoButtons li.Selected   {
            opacity: 1.0;
        }

    ul#auxInfoButtons .Button {
        height: 20px;
        vertical-align: middle;
    }

#auxInfo {
    clear: both;
    margin-top: 10px;
    position: relative;
    font-size: .85rem;
}

body.Dark #auxInfo {
    color: #bbb;
}

body.Light #auxInfo {
    color: #555;
}

body.Blue #auxInfo {
    //color: #0099cc;
    color: #45A5C5;
}

a {
    color: inherit;
}

.auxInfoItem
{
    position: absolute;
    padding: 0 15px;
    margin-bottom: 15px;
    width: 100%;
    box-sizing: border-box;

    border-top: 4px solid #0099cc;
    background: transparent;
    top: -15px;
    left: 0;
    height: 0;
    opacity: 0;

    transition: all .3s;
}

body.Blue .auxInfoItem {
    border-top-color: white;
}

.auxInfoItem.Selected {
    opacity: 1.0;
    top: 0;
    height: auto;
}

body.Dark .auxInfoItem.Selected, body.Blue .auxInfoItem.Selected {
    background: rgba(0,0,0,.6);
}

body.Light .auxInfoItem.Selected {
    background: rgba(255,255,255,.6);
}


/*#region --- "pointer" triangle --- */
.auxInfoItem:before {
    position: absolute;
    content: "";
    @include size(0px);
    border-left: 15px solid transparent;
    border-right: 15px solid transparent;
    border-bottom: 15px solid #0099cc;

    top: -15px;
}
body.Blue .auxInfoItem:before {
    border-bottom-color: white;
}
/* Position the pointer triangle horizontally to point to the respective button */
.auxInfoItem#security:before
{
    right: -1px;
}
.auxInfoItem#newUser:before
{
    right: 28px;
}
.auxInfoItem#help:before
{
    right: 59px;
}
/*#endregion --- end Aux Info Item "pointer" triangle ---*/

.auxInfoItem h2 {
    float: left;
}
.auxInfoItem .CloseAuxInfoButton {
    float: right;
    margin-top: 18px;
}
.auxInfoItem .CloseAuxInfoButton .ButtonImage {
    height: 15px;
}
.auxInfoItem .CloseAuxInfoButton + * {
    clear: both;
}



#auxInfo ul {
    padding-left: 0;
}

#auxInfo li {
    list-style-type: none;
    margin-bottom: 7px;
}
/*#endregion --- end Auxillary Info elements --- */


.InlineImage {
    height: 11px;
}

.SpacedLI {
    margin-top: 15px;
}
